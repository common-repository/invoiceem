<?php
	/*!
	 * Invoice template.
	 *
	 * @since 1.0.6 Added nl2br call to footer labels.
	 * @since 1.0.5 Modified for advanced invoice number generation.
	 * @since 1.0.4 Modified Generated By output to use new setting.
	 * @since 1.0.0
	 *
	 * @package InvoiceEM
	 */

	if (!defined('ABSPATH'))
	{
		exit;
	}
	
	$iem = InvoiceEM();
	$spacer = '<div class="iem-spacer">&nbsp;</div>';
	$border_spacer = '<div class="iem-border-spacer">' . $spacer . '</div>';
	$deposit_overdue_class = $overdue_class = '';
	
	$iem->cache->accounting = InvoiceEM_Client::accounting_settings($client->{InvoiceEM_Client::ID_COLUMN});
	
	if
	(
		empty($project)
		&&
		!empty($invoice->{InvoiceEM_Project::ID_COLUMN})
	)
	{
		InvoiceEM_Invoice::disable_filters();
		
		$project = new InvoiceEM_Project($invoice->{InvoiceEM_Project::ID_COLUMN}, true);
		
		InvoiceEM_Invoice::enable_filters();
	}
	
	require(dirname(__FILE__) . '/view-style.php');
?>

<div class="iem-wrapper">

	<table border="0" cellpadding="0" cellspacing="0" class="iem-bottom">
		<tbody>
			<tr>
				<td class="iem-column">
					<table border="0" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td class="iem-title">
								
									<?php
										$invoice_title = (empty($invoice->invoice_title))
										? $iem->settings->invoicing->invoice_title
										: $invoice->invoice_title;

										echo strtoupper($invoice_title);
									?>
									
								</td>
							</tr>
							
							<tr>
								<td class="iem-spacer">&nbsp;</td>
							</tr>
							
							<tr>
								<td>
								
									<?php
										$date_format = get_option('date_format');
										
										$invoice_number = (empty($invoice->invoice_number))
										? $invoice->generate_invoice_number(($invoice->send_date <= 0))
										: $invoice->invoice_number;

										$invoice_details = array
										(
											sprintf
											(
												$iem->settings->translation->get_label('invoice_number'),
												'</strong><span>' . $invoice_number . '</span><strong>'
											)
										);

										$deposit = $deposit_due = $status = $payment_due = '';
										$totals = $invoice->calculate_totals();
										
										$has_payment =
										(
											is_numeric($invoice->paid)
											&&
											$invoice->paid > 0
										);
										
										if (!empty($invoice->deposit))
										{
											$deposit = (is_numeric($invoice->deposit))
											? $invoice->deposit
											: $totals['total'] * (preg_replace('/[^\d.]/u', '', $invoice->deposit) / 100);
											
											if
											(
												$has_payment
												&&
												$deposit < $invoice->paid
											)
											{
												$deposit = '';
											}
										}

										$has_deposit = (!empty($deposit));
										
										if ($has_payment)
										{
											$totals['total'] -= $invoice->paid;
										}
										
										$no_send_date = empty($invoice->send_date);
										
										$is_scheduled =
										(
											!$no_send_date
											&&
											$invoice->send_date < 0
										);
										
										if
										(
											$no_send_date
											||
											$is_scheduled
										)
										{
											$status_label = ($is_scheduled)
											? 'scheduled'
											: 'draft';
											
											$status = $iem->settings->translation->get_label($status_label);
											
											if ($is_scheduled)
											{
												$invoice_details[] = sprintf
												(
													$iem->settings->translation->get_label('invoice_date'),
													'</strong><span>' . InvoiceEM_Utilities::format_date($date_format, abs($invoice->send_date)) . '</span><strong>'
												);
											}
											
											$label_days_after = __('%d Days After Invoice Date', 'invoiceem');
											
											if
											(
												$has_deposit
												&&
												$invoice->deposit_due > 0
											)
											{
												$deposit_due = sprintf
												(
													$label_days_after,
													$invoice->deposit_due
												);
											}
											
											$invoice->payment_due = (is_null($invoice->payment_due))
											? $iem->settings->invoicing->payment_due
											: $invoice->payment_due;
											
											if ($invoice->payment_due > 0)
											{
												$payment_due = sprintf
												(
													$label_days_after,
													$invoice->payment_due
												);
											}
										}
										else
										{
											$invoice_details[] = sprintf
											(
												$iem->settings->translation->get_label('invoice_date'),
												'</strong><span>' . InvoiceEM_Utilities::format_date($date_format, $invoice->send_date) . '</span><strong>'
											);
											
											if ($totals['total'] == 0)
											{
												$status = $iem->settings->translation->get_label('paid');
											}
											else
											{
												$now = time();
												
												if
												(
													$has_deposit
													&&
													$invoice->deposit_due > 0
												)
												{
													$deposit_due = InvoiceEM_Utilities::format_date($date_format, $invoice->deposit_due);

													if ($invoice->deposit_due < $now)
													{
														$deposit_overdue_class = ' class="iem-overdue"';
														$deposit_due = '<strong' . $deposit_overdue_class . '>' . $deposit_due . '</strong>';
													}
												}
												
												if ($invoice->payment_due > 0)
												{
													$payment_due = InvoiceEM_Utilities::format_date($date_format, $invoice->payment_due);

													if ($invoice->payment_due < $now)
													{
														$status = $iem->settings->translation->get_label('overdue');
														$overdue_class = ' class="iem-overdue"';
														$payment_due = '<strong' . $overdue_class . '>' . $payment_due . '</strong>';
													}
												}
											}
										}
										
										if
										(
											$has_deposit
											&&
											$invoice->deposit_due == 0
										)
										{
											$deposit_due = $iem->settings->translation->get_label('upon_receipt');
										}

										if ($invoice->payment_due == 0)
										{
											$payment_due = $iem->settings->translation->get_label('upon_receipt');
										}

										if (!empty($deposit_due))
										{
											$invoice_details[] = sprintf
											(
												$iem->settings->translation->get_label('deposit_due'),
												'</strong><span>' . $deposit_due . '</span><strong>'
											);
										}

										if (!empty($payment_due))
										{
											$invoice_details[] = sprintf
											(
												$iem->settings->translation->get_label('payment_due'),
												'</strong><span>' . $payment_due . '</span><strong>'
											);
										}

										echo str_replace
										(
											'<strong></strong>',
											'',
											
											'<strong>'
											. implode('</strong><br /><strong>', $invoice_details)
											. '</strong>'
										);
									?>
									
								</td>
							</tr>
						</tbody>
					</table>
				</td>

				<td class="iem-column-spacer">&nbsp;</td>

				<td class="iem-column">
					<table border="0" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td class="iem-align-opposite"><?php InvoiceEM_Output::company_logo('large', '9em', '18em'); ?></td>
							</tr>
							
							<tr>
								<td class="iem-spacer">&nbsp;</td>
							</tr>
							
							<tr>
								<td class="iem-align-opposite"><?php InvoiceEM_Output::company_information(); ?></td>
							</tr>
						</tbody>
					</table>
				</td>
			</tr>
		</tbody>
	</table>

	<?php
		echo $spacer;
		
		if (!empty($status))
		{
			echo '<div class="iem-status">' . $status . '</div>'
			. $spacer;
		}
		
		echo $border_spacer;
	?>

	<table border="0" cellpadding="0" cellspacing="0">
		<tbody>
			<tr>
				<td class="iem-column">

					<?php InvoiceEM_Output::client_to($client); ?>

				</td>

				<td class="iem-column-spacer">&nbsp;</td>

				<td class="iem-column">

					<?php
						$for = array('<strong>' . $iem->settings->translation->get_label('for') . '</strong>');

						if
						(
							!empty($project)
							&&
							$project->project_name != $client->client_name
						)
						{
							$for[] = $project->project_name;
						}

						$for[] = $invoice->regarding;

						if (!empty($invoice->po_number))
						{
							$for[] = sprintf
							(
								$iem->settings->translation->get_label('po_number'),
								$invoice->po_number
							);
						}

						echo implode('<br />', $for);
					?>

				</td>
			</tr>
		</tbody>
	</table>

	<?php echo $spacer; ?>

	<table border="0" cellpadding="0" cellspacing="0" class="iem-line-items">
		<thead>
		
			<?php
				$show_date = false;
				$show_quantity = false;
				$show_adjustment = false;

				foreach ($totals['lines'] as $line)
				{
					$show_date = (!empty($line['date']));
					
					$show_quantity =
					(
						$line['type'] != 'd'
						||
						$line['quantity'] > 1
					);
					
					$show_adjustment = (!empty($line['adjustment']));

					if
					(
						$show_date
						&&
						$show_quantity
						&&
						$show_adjustment
					)
					{
						break;
					}
				}
				
				echo '<tr>';

				$colspan = 2;

				if ($show_date)
				{
					echo '<th>' . $iem->settings->translation->get_label('date_column') . '</th>';

					$colspan++;
				}

				echo '<th>' . $iem->settings->translation->get_label('details_column') . '</th>';
				
				if ($show_quantity)
				{
					echo '<th>' . $iem->settings->translation->get_label('quantity_column') . '</th>';
					
					$colspan++;
				}
				
				echo '<th>' . $iem->settings->translation->get_label('rate_column') . '</th>';

				if ($show_adjustment)
				{
					echo '<th>' . $iem->settings->translation->get_label('adjustment_column') . '</th>';

					$colspan++;
				}

				echo '<th>' . $iem->settings->translation->get_label('total_column') . '</th>'
				. '</tr>';
			?>
			
		</thead>
		
		<tbody>
		
			<?php
				foreach ($totals['lines'] as $line)
				{
					echo '<tr>';

					if ($show_date)
					{
						$date = (empty($line['date']))
						? '--'
						: date_i18n('d-M', $line['date']);

						echo '<td class="iem-nowrap">' . $date . '</td>';
					}

					$description = (empty($line['description']))
					? ''
					: '<br />'
					. '<span class="iem-description">' . nl2br($line['description']) . '</span>';

					$quantity_split = explode('.', $line['quantity']);

					if ($quantity_split[0] == 0)
					{
						$quantity_split[0] = '';
					}

					echo '<td>' . $line['title'] . $description . '</td>';
					
					if ($show_quantity)
					{
						echo
						(
							$line['type'] == 'd'
							&&
							$line['quantity'] == 1
						)
						? '<td>--</td>'
						: '<td class="iem-nowrap">'
						. sprintf
						(
							$iem->settings->invoicing->get_quantity_type_label($line['type'], $line['quantity']),

							(
								count($quantity_split) == 2
								&&
								$quantity_split[1] == '5'
							)
							? $quantity_split[0] . '<span>&#0189;</span>'
							: $line['quantity']
						)
						. '</td>';
					}
					
					echo '<td class="iem-nowrap iem-align-opposite">' . InvoiceEM_Utilities::format_currency($line['rate']) . '</td>';

					if ($show_adjustment)
					{
						$adjustment = (empty($line['adjustment']))
						? '--'
						: InvoiceEM_Utilities::format_currency($line['adjustment']);

						echo '<td class="iem-nowrap iem-align-opposite">' . $adjustment . '</td>';
					}

					echo '<td class="iem-nowrap iem-align-opposite">' . InvoiceEM_Utilities::format_currency($line['subtotal']) . '</td>'
					. '</tr>';
				}
				
				$has_pre_tax_discount = (!empty($totals['pre_tax_discount']));
				$has_discount = (!empty($totals['discount']));
				$double_border = ' class="iem-double-border"';
				
				$has_taxes =
				(
					is_array($totals['taxes'])
					&&
					!empty($totals['taxes'])
				);

				$is_paid =
				(
					is_numeric($invoice->paid)
					&&
					$invoice->paid > 0
				);

				if
				(
					$has_pre_tax_discount
					||
					$has_discount
					||
					$has_payment
					||
					$has_taxes
				)
				{
					echo '<tr' . $double_border . '>'
					. '<td colspan="' . $colspan . '" class="iem-borderless iem-align-opposite">' . $iem->settings->translation->get_label('subtotal') . '</td>'
					. '<td class="iem-nowrap iem-align-opposite">' . InvoiceEM_Utilities::format_currency($totals['subtotal']) . '</td>'
					. '</tr>';
					
					$double_border = '';

					if ($has_pre_tax_discount)
					{
						echo '<tr>'
						. '<td colspan="' . $colspan . '" class="iem-borderless iem-align-opposite">' . $iem->settings->translation->get_label('discount') . '</td>'
						. '<td class="iem-nowrap iem-align-opposite">' . InvoiceEM_Utilities::format_currency($totals['pre_tax_discount']) . '</td>'
						. '</tr>';
					}
					
					if ($has_taxes)
					{
						foreach ($totals['taxes'] as $details)
						{
							echo '<tr>'
							. '<td colspan="' . $colspan . '" class="iem-borderless iem-align-opposite">'
							. sprintf
							(
								$iem->settings->translation->get_label('tax'),
								$details['label']
							)
							. '</td>'
							. '<td class="iem-nowrap iem-align-opposite">' . InvoiceEM_Utilities::format_currency($details['tax']) . '</td>'
							. '</tr>';
						}
					}

					if ($has_discount)
					{
						echo '<tr>'
						. '<td colspan="' . $colspan . '" class="iem-borderless iem-align-opposite">' . $iem->settings->translation->get_label('discount') . '</td>'
						. '<td class="iem-nowrap iem-align-opposite">' . InvoiceEM_Utilities::format_currency($totals['discount']) . '</td>'
						. '</tr>';
					}

					if ($has_payment)
					{
						echo '<tr>'
						. '<td colspan="' . $colspan . '" class="iem-borderless iem-align-opposite">' . $iem->settings->translation->get_label('amount_paid') . '</td>'
						. '<td class="iem-nowrap iem-align-opposite">' . InvoiceEM_Utilities::format_currency($invoice->paid * -1) . '</td>'
						. '</tr>';
					}
				}
			?>
			
		</tbody>
		
		<tfoot>
		
			<?php
				if ($has_deposit)
				{
					echo '<tr' . $double_border . '>'
					. '<td colspan="' . $colspan . '" class="iem-borderless iem-align-opposite"><strong>' . $iem->settings->translation->get_label('deposit_amount_due') . '</strong></td>'
					. '<td class="iem-nowrap iem-align-opposite"><strong>' . InvoiceEM_Utilities::format_currency($deposit) . '</strong></td>'
					. '</tr>';
					
					$double_border = '';
				}
				
				echo '<tr' . $double_border . '>'
				. '<td colspan="' . $colspan . '" class="iem-borderless iem-align-opposite"><strong>' . $iem->settings->translation->get_label('total_amount_due') . '</strong></td>'
				. '<td class="iem-nowrap iem-align-opposite"><strong>' . InvoiceEM_Utilities::format_currency($totals['total']) . '</strong></td>'
				. '</tr>';
			?>
			
		</tfoot>
	</table>

	<?php
		$footer_note = (empty($invoice->footer_note))
		? $iem->settings->invoicing->footer_note
		: $invoice->footer_note;
		
		if (!empty($footer_note))
		{
			echo $spacer
			. '<div>' . nl2br($footer_note) . '</div>';
		}
		
		$footer_thank_you = (empty($invoice->footer_thank_you))
		? $iem->settings->invoicing->footer_thank_you
		: $invoice->footer_thank_you;
		
		if (!empty($footer_thank_you))
		{
			echo $spacer
			. '<div><strong>' . nl2br($footer_thank_you) . '</strong></div>';
		}
		
		if ($iem->settings->general->show_generated_by)
		{
			$link = '<a href="https://invoiceem.com" target="_blank" rel="noopener noreferrer">';
			
			echo $spacer
			. $border_spacer
			. '<div class="iem-generated-by">'
			. str_replace
			(
				'  ',
				'&nbsp; ',

				sprintf
				(
					__('Invoice Generated by %1$s  |  %2$s', 'invoiceem'),
					$link . $iem->cache->plugin_data['Name'] . '</a>',
					$link . 'https://invoiceem.com</a>'
				)
			)
			. '</div>';
		}
	?>
	
</div>
